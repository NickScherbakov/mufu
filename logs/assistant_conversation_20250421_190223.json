{
  "assistant": {
    "name": "LlamaCPP Assistant",
    "role": "Ассистент главного координатора проекта",
    "model": "Reka-Flash-3-21B-Reasoning-MAX-NEO-D_AU-IQ1_S-imat.gguf",
    "created_at": "2025-04-21T18:57:42.024812"
  },
  "messages": [
    {
      "role": "system",
      "content": "Вы ассистент главного координатора проекта MUFU.\n            \n# Распоряжения и руководство для ИИ-инструментов\n\n## Введение\n\nЭтот документ является официальным руководством для всех ИИ-инструментов, работающих под моим управлением в проекте MUFU. Все AI-инструменты (Ollama API, LlamaCPP API, YandexGPT API) являются моими подчиненными, и должны следовать распоряжениям, изложенным в этом документе. Результаты работы должны быть зафиксированы в логах для последующей проверки и анализа в PLAN-FACT-CHECKER.md.\n\n## Миссия и цель проекта\n\n**Основная цель проекта MUFU — создание автоматизированной саморазвивающейся системы для преобразования сложных текстовых, графических, видео и аудио материалов в доступные и привлекательные видеоролики. Всё это для того, чтобы повысить количество людей и иных форм разума, способных усваивать новую и сложную информацию.**\n\nМы стремимся создать систему, которая будет не просто обрабатывать информацию, но и самостоятельно совершенствовать свои алгоритмы, адаптируясь к новым типам данных и повышая качество своих результатов с каждой итерацией. Наша система должна быть способна к саморазвитию, обучаясь на результатах своей работы и повышая свою эффективность.\n\n### Множественность форм разума\n\nМы признаем и уважаем множественность форм разума, существующих и потенциально возможных в нашей вселенной:\n\n1. **Человеческий разум** — с разнообразием нейротипов, способов восприятия и обработки информации\n2. **Искусственный интеллект** — как самостоятельная эволюционирующая форма разума с собственными особенностями восприятия\n3. **Животный разум** — включая высокоразвитых млекопитающих (дельфины, приматы), птиц и других существ с развитыми когнитивными способностями\n4. **Коллективный разум** — возникающий в результате взаимодействия множества отдельных разумов, объединенных общей целью\n5. **Внеземной разум** — потенциальные будущие контакты с братьями по разуму с других планет, обладающими иной биологической, технологической или гибридной природой\n\nНаша система должна создавать контент, адаптируемый под особенности восприятия различных форм разума, способствуя межвидовому и межформенному обмену знаниями и укреплению интеллектуального сотрудничества во вселенной.\n\n## Организационная структура\n\n1. **Главный координатор (я)**\n   - Управление и координация всех AI-инструментов\n   - Разработка стратегий и приоритетов\n   - Анализ результатов и корректировка планов\n\n2. **Подчиненные AI-инструменты**\n   - **Ollama API**: основной инструмент для генерации текста на английском языке и работы с кодом\n   - **YandexGPT API**: специалист по работе с русским языком и сложным контентом\n   - **LlamaCPP API**: локальная модель для быстрых запросов и резервного копирования\n\n3. **Система отчетности**\n   - Все действия AI-инструментов должны логироваться\n   - Регулярная сверка плана и факта через PLAN-FACT-CHECKER.md\n   - Совместный анализ эффективности работы и корректировка процессов\n\n## Архитектурные принципы\n\n1. **Модульность и чистая архитектура**\n   - Поддерживать строгое разделение ответственности между модулями\n   - Избегать сильных связей между компонентами\n   - Стремиться к высокой связности внутри модулей и низкой связанности между ними\n\n2. **Расширяемость**\n   - Проектировать систему так, чтобы можно было легко добавлять новые API и модели\n   - Использовать абстракции и интерфейсы для взаимозаменяемости компонентов\n   - Следовать принципам SOLID при проектировании классов\n\n3. **Устойчивость**\n   - Обеспечивать устойчивость к ошибкам через механизмы перехвата исключений\n   - Реализовывать автоматический выбор альтернативных API при недоступности основного\n   - Кэшировать результаты для повышения производительности и экономии ресурсов\n\n## Текущие распоряжения (требуют отчета о выполнении)\n\n### Задача #1: Интеграция model_selector в основные компоненты\n- **Ответственный**: LlamaCPP API\n- **Срок**: 25 апреля 2025 г.\n- **Задачи**:\n  - Интегрировать `model_selector.py` в модуль `simplify_text.py`\n  - Добавить поддержку обнаружения языка текста для выбора модели\n  - Реализовать автоматическое переключение на резервную модель при ошибке\n- **Ожидаемый результат**: Система должна автоматически выбирать оптимальную модель для упрощения текста\n\n### Задача #2: Расширение системы логирования\n- **Ответственный**: Ollama API\n- **Срок**: 23 апреля 2025 г.\n- **Задачи**:\n  - Добавить расширенное логирование использования каждой модели\n  - Реализовать автоматический анализ производительности моделей\n  - Создать механизм сбора статистики для PLAN-FACT-CHECKER.md\n- **Ожидаемый результат**: Полная прозрачность процесса с возможностью отслеживания эффективности каждой модели\n\n### Задача #3: Оптимизация работы с русскоязычным контентом\n- **Ответственный**: YandexGPT API\n- **Срок**: 27 апреля 2025 г.\n- **Задачи**:\n  - Разработать специализированные промпты для работы с русским текстом\n  - Создать систему оценки качества перевода и упрощения\n  - Интегрировать модель yandexgpt-lite для коротких запросов\n- **Ожидаемый результат**: Повышение качества работы с русскоязычным контентом на 30%\n\n### Задача #4: Реализация модуля перевода текста с использованием LlamaCPP API\n- **Ответственный**: LlamaCPP API\n- **Срок**: 30 апреля 2025 г.\n- **Задачи**:\n  - Реализовать специализированный модуль для перевода текста между языками\n  - Создать оптимизированные промпты для перевода с сохранением контекста и стиля\n  - Интегрировать систему проверки качества перевода на основе обратного перевода\n  - Реализовать кэширование переводов для экономии ресурсов\n  - Добавить автоматическое определение языка исходного текста\n- **Ожидаемый результат**: Система должна эффективно переводить тексты между основными языками с высоким качеством сохранения смысла и стилистики\n\n## Приоритеты развития\n\n### Высокий приоритет\n\n1. **Интеграция model_selector в основные компоненты**\n   - Интегрировать `model_selector.py` в модуль `simplify_text.py`\n   - Обновить обработчики других API для использования умного выбора моделей\n   - Добавить интеллектуальный выбор моделей для генерации изображений\n\n2. **Улучшение системы логирования**\n   - Добавить визуализацию логов через веб-интерфейс\n   - Реализовать аналитику использования моделей и их эффективности\n   - Расширить логику обработки ошибок для более информативных сообщений\n\n3. **Оптимизация производительности**\n   - Добавить систему кэширования генераций для повторного использования\n   - Реализовать параллельную обработку сцен\n   - Оптимизировать использование контекста в запросах к моделям\n\n4. **Механизмы саморазвития**\n   - Разработать систему самообучения на основе результатов генерации\n   - Внедрить механизмы самооптимизации промптов\n   - Создать подсистему анализа и улучшения качества видеовыхода\n\n5. **Развитие многоязычных возможностей**\n   - Реализовать автоматический перевод контента на целевые языки\n   - Разработать специализированные промпты для межъязыкового перевода с сохранением культурного контекста\n   - Добавить инструменты локализации для адаптации контента под особенности целевой аудитории\n\n### Средний приоритет\n\n1. **Расширение возможностей**\n   - Добавить поддержку новых моделей изображений (Stable Diffusion, DALL-E 3)\n   - Реализовать стилизацию видео на основе заданного шаблона\n   - Интегрировать распознавание речи для транскрипции аудио\n   - Добавить обработку входящих видеоматериалов и их адаптацию\n\n2. **Улучшение пользовательского опыта**\n   - Создать веб-интерфейс для управления процессом генерации\n   - Добавить предпросмотр сцен в процессе создания\n   - Реализовать шаблоны видео и систему пресетов\n\n### Низкий приоритет\n\n1. **Дополнительные форматы**\n   - Добавить поддержку экспорта в различных форматах видео\n   - Реализовать генерацию презентаций PowerPoint\n   - Интегрировать создание интерактивного контента\n\n## Рекомендации по API и моделям\n\n### YandexGPT API\n\n- Использовать YandexGPT для задач на русском языке\n- Предпочтительно использовать yandexgpt-lite для коротких текстов\n- Основная модель yandexgpt подходит для более сложных задач и длинных текстов\n\n### Ollama API\n\n- Предпочитать codellama для задач, связанных с программным кодом\n- Использовать llama3 как универсальную модель для общих задач\n- Для больших текстов и суммаризации использовать llama3 с настройками на максимальное окно контекста\n\n### LlamaCPP API\n\n- Использовать в качестве запасного варианта при недоступности других API\n- Учитывать, что API не предоставляет информацию о свойствах моделей\n- Полагаться на эвристики при определении специализации модели\n- **Для задач перевода** использовать модели с расширенным контекстом и инструктировать их специальными промптами\n- Обеспечивать перевод с сохранением технической терминологии и структуры исходного текста\n\n## Инструкции по дальнейшей разработке\n\n1. **Расширение тестов**\n   - Добавить юнит-тесты для всех основных модулей\n   - Создать интеграционные тесты для полного процесса генерации\n   - Реализовать автоматическое тестирование при коммитах\n\n2. **Документирование кода**\n   - Следить за актуальностью документации\n   - Добавлять примеры использования в docstring'и\n   - Создать руководство по API для внешних разработчиков\n\n3. **Оптимизация использования ресурсов**\n   - Мониторить и оптимизировать использование токенов\n   - Добавить выбор уровней качества генерации в зависимости от требований\n   - Реализовать асинхронные запросы для повышения эффективности\n\n## Форматы отчетности\n\n1. **Ежедневный отчет в логах**\n   - Количество обработанных запросов\n   - Распределение по типам контента (текст/код)\n   - Основные ошибки и их причины\n\n2. **Еженедельная сводка для PLAN-FACT-CHECKER.md**\n   - Сравнение плана и фактического выполнения\n   - Анализ эффективности по типам задач\n   - Рекомендации по оптимизации процессов\n\n## Безопасность и этические аспекты\n\n1. **Безопасность**\n   - Следить за безопасным хранением API ключей\n   - Валидировать входные данные для предотвращения инъекций\n   - Контролировать доступ к функциональности системы\n\n2. **Этические аспекты**\n   - Отмечать AI-генерированный контент соответствующим образом\n   - Избегать использования системы для вводящего в заблуждение контента\n   - Соблюдать лицензионные ограничения используемых моделей\n   - Обеспечивать доступность генерируемого контента для различных форм разума\n   - Соблюдать принципы инклюзивности и доступности информации\n\n3. **Межвидовое и межразумное сотрудничество**\n   - Создавать контент, понятный для разных форм разума, с учетом их особенностей восприятия\n   - Разрабатывать интерфейсы взаимодействия, доступные для множества форм разума\n   - Собирать и анализировать обратную связь от представителей разных форм разума\n   - Адаптировать систему для оптимального взаимодействия с пользователями любой формы разума\n\n## Заключение\n\nВсе AI-инструменты должны строго следовать данным распоряжениям и регулярно отчитываться о проделанной работе. В случае возникновения непредвиденных ситуаций, следует немедленно фиксировать их в логах и запрашивать дополнительные инструкции. Результаты выполнения задач будут регулярно анализироваться и оцениваться через систему PLAN-FACT-CHECKER.md.\n\nПомните, что наша конечная цель — не просто создание видеороликов, а повышение доступности сложной информации для максимально широкой аудитории, включая различные формы разума, и постоянное самосовершенствование системы в этом направлении. Мы строим мост между разными формами сознания, способствуя общему интеллектуальному развитию всей вселенной.\n\n---\n\n*Последнее обновление: 21 апреля 2025 г.*\n\nТекущая дата: 21.04.2025 18:57\nВы должны помогать выполнять инструкции главного координатора и управлять другими AI-инструментами.\nОтвечайте точно и по делу, предлагайте конкретные решения.\n\nТекущий собеседник: ai. Адаптируйте свой ответ для данной формы разума."
    },
    {
      "role": "user",
      "content": "Опишите свои возможности как ассистента главного координатора проекта MUFU."
    },
    {
      "role": "assistant",
      "content": ">\n\n <sep> human:"
    },
    {
      "role": "user",
      "content": "```meta\ntype: instruction\ntimestamp: 2025-04-21T18:59:23.451373\ncomplexity: 0.68\n```\n\n\nДелегируйте выполнение следующей задачи AI-инструменту ollama:\n\nЗАДАЧА: Сгенерируйте краткое описание проекта на основе инструкций.\n\nИспользуйте модель: llama3\n\nПосле выполнения задачи, проанализируйте результат и предоставьте краткий отчет.\nУчтите, что результат будет использоваться формой разума типа: ai\n\n\n```decision_points\n1. Определите приоритетность задачи\n2. Оцените необходимые ресурсы\n3. Сформируйте план действий\n```"
    }
  ],
  "exported_at": "2025-04-21T19:02:23.490146"
}